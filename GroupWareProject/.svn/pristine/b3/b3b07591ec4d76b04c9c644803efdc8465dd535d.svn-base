package kr.or.ddit.groupware.util;

import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import javax.annotation.Resource;

import org.apache.commons.io.FileUtils;
import org.apache.commons.io.FilenameUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.multipart.MultipartFile;

import kr.or.ddit.groupware.service.attach.IAttachFileService;
import kr.or.ddit.groupware.vo.AttachFileVO;

@Component
public class FileUtil {

	@Resource(name = "path")
	private String resourcePath;

	@Autowired
	private IAttachFileService attachFileService;

	@Transactional
	public List<String> saveUploadFile(List<MultipartFile> files, TableCode code) {

		List<String> saveFileNames = new ArrayList<>();

		String savedPath = getFolderName(resourcePath, code);
		int atchFileGroupNo = 0;
		if (files != null) {
			atchFileGroupNo = attachFileService.insertAttachFileGroup();

			if (atchFileGroupNo == 0) {
				throw new RuntimeException();
			}
		}

		for (MultipartFile file : files) {

			AttachFileVO attachFileVO = new AttachFileVO();
			String savedName = UUID.randomUUID().toString() + "_" + file.getOriginalFilename();
			String uploadedFileName = savedPath.replace(File.separatorChar, '/') + "/" + savedName;

			attachFileVO.setAtchFileGroupNo(atchFileGroupNo);
			attachFileVO.setAtchFileOrnlFileNm(file.getOriginalFilename());
			attachFileVO.setAtchFileNm(savedName);
			attachFileVO.setAtchFileSize(file.getSize());
			attachFileVO.setAtchFileFancysize(FileUtils.byteCountToDisplaySize(file.getSize()));
			attachFileVO.setAtchFileExtsn(FilenameUtils.getExtension(uploadedFileName));
			attachFileVO.setAtchFilePath(uploadedFileName);

			attachFileService.insertSavedFile(attachFileVO);

			File target = new File(savedPath, savedName);

			try {
				file.transferTo(target);
			} catch (Exception e) {
				e.printStackTrace();
			}
			saveFileNames.add(uploadedFileName);
		}

		return saveFileNames;
	}

	private static String getFolderName(String path, TableCode code) {

		String folderName = "";

		if (code.equals(TableCode.EMPLOYEE)) {
			folderName = "employee";
		}
		else if (code.equals(TableCode.BOARD)) {
			folderName = "board";
		}
		else if (code.equals(TableCode.MESSAGE)) {
			folderName = "message";
		}
		else if (code.equals(TableCode.EMAIL)) {
			folderName = "mail";
		}
		else if (code.equals(TableCode.MEMO)) {
			folderName = "memo";
		}
		else if (code.equals(TableCode.PROJECT)) {
			folderName = "project";
		}
		else if (code.equals(TableCode.DRAFT)) {
			folderName = "draft";
		}

		path += folderName;

		createFolder(path);

		return path;
	}

	private static void createFolder(String path) {

		File uploadDir = new File(path);

		if (!uploadDir.exists()) {
			uploadDir.mkdirs();
		}
	}

}
