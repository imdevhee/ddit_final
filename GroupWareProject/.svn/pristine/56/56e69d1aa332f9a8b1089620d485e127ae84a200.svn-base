package kr.or.ddit.groupware.controller.mail;

import java.util.List;

import javax.inject.Inject;

import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.groupware.service.employee.IEmployeeService;
import kr.or.ddit.groupware.service.mail.IMailService;
import kr.or.ddit.groupware.util.Result;
import kr.or.ddit.groupware.vo.BoardVO;
import kr.or.ddit.groupware.vo.EmailVO;
import kr.or.ddit.groupware.vo.PaginationInfoVO;

/**
 * 메일 컨트롤러
 * @author <strong>최소희</strong>
 * @version 1.0
 * @see MailController
 */
@Controller
@RequestMapping("/mail")
public class MailController {
	
	@Inject
	private IMailService service;
	
	@Inject
	private IEmployeeService employeeService;
	
	/**
	 * 받은메일함 (selectList)
	 * @author 최소희
	 * @param currentPage
	 * @param searchType
	 * @param searchWord
	 * @param model
	 * @return
	 */
	@GetMapping(value="/inbox")
	public String selectInbox(
			@RequestParam(name="page", required = false, defaultValue = "1") int currentPage,
			@RequestParam(required = false, defaultValue = "all") String searchType,
			@RequestParam(required = false) String searchWord,
			Model model
			) {
		int emplNo = 1;
		PaginationInfoVO<EmailVO> pagingVO = new PaginationInfoVO<EmailVO>();
		pagingVO.setEmplNo(emplNo);
		
		// 검색이 이뤄지면 아래가 실행됨
		// 검색이 이뤄졌다는 걸 정확하게 확인하기 위해서는 searchWord가 비어있지 않을 때
		if(StringUtils.isNotBlank(searchWord)) {
			pagingVO.setSearchType(searchType);
			pagingVO.setSearchWord(searchWord);
			model.addAttribute("searchType", searchType);
			model.addAttribute("searchWord", searchWord);
		}
		
		// startRow, endRow, startPage, endPage를 설정
		pagingVO.setCurrentPage(currentPage);
		
		// totalRecord라는 총 게시글 수
		int totalRecord = service.selectEmailCount(pagingVO);
		pagingVO.setTotalRecord(totalRecord);	// totalPage 설정
		
		List<EmailVO> dataList = service.selectEmailList(pagingVO);
		pagingVO.setDataList(dataList);
		
		model.addAttribute("pagingVO",pagingVO);
		
		// 안 읽은 메일 개수
		int noRead = service.selectNoReadCount(emplNo);
		model.addAttribute("noRead", noRead);
		
		return "main/email";
	}

	/**
	 * 메일 상세 페이지 (selectOne)
	 * @author 최소희
	 * @param model
	 * @param emailNo
	 * @return 메일 상세 페이지
	 */
	@GetMapping(value = "/detail")
	public String selectEmail(Model model, int emailNo) {
		
		EmailVO emailVO = service.selectEmail(emailNo);
		setSender(emailVO);
		Result result = service.readEmail(emailNo);
		model.addAttribute("email",emailVO);
		
		return "main/emailDetail";
	}
	
	// emailVO에 보낸사람 employeeVO를 set
	public void setSender(EmailVO emailVO) {
		emailVO.setSenderVO(employeeService.selectEmployee(emailVO.getSenderNo()));
	}
	
	// emailVO에 받는사람 employeeVO를 set
	public void setReciever(EmailVO emailVO) {
		emailVO.setRecieverVO(employeeService.selectEmployee(emailVO.getEmailReceptionVO().getRecieverNo()));
	}
	
	/**
	 * 메일 하나 휴지통으로 보내기
	 * @author 최소희
	 * @param emailNo
	 * @param senderNo
	 * @param ra
	 * @return
	 */
	@GetMapping("/delete")
	public String deleteEmail(int emailNo, int senderNo, RedirectAttributes ra) {
		int emplNo = 1;
		String goPage = "";
		Result result = null;
		
		if(emplNo == senderNo) { // 사용자와 발신자가 같을 때 보낸메일 삭제
			result = service.deleteEmail(emailNo);
		}else { // 사용자와 발신자가 다를 때 받은메일 삭제
			result = service.deleteReception(emailNo);
		}
		
		if(result.equals(Result.OK)) {
			ra.addFlashAttribute("message","메일이 삭제되었습니다!");
			goPage = "redirect:inbox";
		}else {
			ra.addFlashAttribute("message","메일 삭제에 실패하였습니다!");
			goPage = "redirect:detail?emailNo="+emailNo;
		}
		return goPage;
	}
	
	
	public String deleteEmailArray(int[] emailArray) {
		String goPage="";
		return goPage;
	}
}
