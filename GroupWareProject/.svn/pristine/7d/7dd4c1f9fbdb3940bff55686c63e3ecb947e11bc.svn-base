<%@page import="java.time.format.DateTimeFormatter"%>
<%@page import="java.time.LocalDateTime"%>
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>


<link rel="stylesheet" href="${pageContext.request.contextPath}/resources/project/css/calendar/form.css" />
 
<div class="schedul-page-box row">
	<div class="col-yen-10 cal-nav">
		<div class="nav flex-column nav-pills mb-4 mb-md-0" id="v-pills-tab" role="tablist" aria-orientation="vertical">
			<a class="nav-link active" id="v-pills-home-tab" data-bs-toggle="pill" href="#v-pills-home" role="tab" aria-controls="v-pills-home" aria-selected="true">
				<i class="fa-solid fa-plus"></i> 새 일정 등록
			</a>
			<br />
			<a class="nav-link" id="v-pills-all-tab" data-bs-toggle="pill" href="/schedule" role="tab" aria-controls="v-pills-home" aria-selected="false"> 전체 일정 보기 </a>
			<a class="nav-link" id="v-pills-my-tab" data-bs-toggle="pill" href="/schedule" role="tab" aria-controls="v-pills-profile" aria-selected="false"> 내 일정 </a>
			<a class="nav-link" id="v-pills-team-tab" data-bs-toggle="pill" href="javascript:void(0);" onclick="getDeptCal();" role="tab" aria-controls="v-pills-messages" aria-selected="false"> 부서 일정 </a>
			<a class="nav-link" id="v-pills-project-tab" data-bs-toggle="pill" href="javascript:void(0);" onclick="getProCal();" role="tab" aria-controls="v-pills-settings" aria-selected="false"> 프로젝트 </a>
			<a class="nav-link" id="v-pills-company-tab" data-bs-toggle="pill" href="javascript:void(0);" onclick="getComCal();" role="tab" aria-controls="v-pills-settings" aria-selected="false"> 사내 일정 </a>
		</div>
	</div>
	<div class="card schdul-input col-yen-50">
		<div class="card-body">
			<form action="/schedule/register" method="post" class="form-horizontal row">
				<div class="schdul-input-title input-group align-items-center">
					<span id="btn-select-color" onclick="showColorModal()" class="side-stick yen-red"></span>
					<input name="schdulNm" id="input-title" type="text" class="form-control form-control-lg fs-8" placeholder="제목을 입력하세요.">
				</div>
				<button type="button" id="btn-color-modal" style="display: none;" class="btn" data-bs-toggle="modal" data-bs-target="#modal-schedule-color"></button>
				<!-- 모달 -->
				<div class="modal fade" id="modal-schedule-color" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" style="display: none;" aria-hidden="true">
					<div class="modal-dialog modal-select-color">
						<div class="modal-content">
							<div class="modal-header d-flex align-items-center">
								<h4 class="modal-title" id="myLargeModalLabel">색상</h4>
								<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
							</div>
							<div class="modal-body row select-color">
								<div id="red" class="d-flex justify-content-center align-items-center color-circle round-40 rounded-circle yen-red" onclick="getColor(this)"></div>
								<div id="orange" class="d-flex justify-content-center align-items-center color-circle round-40 rounded-circle yen-orange" onclick="getColor(this)"></div>
								<div id="yellow" class="d-flex justify-content-center align-items-center color-circle round-40 rounded-circle yen-yellow" onclick="getColor(this)"></div>
								<div id="yellowgreen" class="d-flex justify-content-center align-items-center color-circle round-40 rounded-circle yen-yellowgreen" onclick="getColor(this)"></div>
								<div id="green" class="d-flex justify-content-center align-items-center color-circle round-40 rounded-circle yen-green" onclick="getColor(this)"></div>
								<div id="bluegreen" class="d-flex justify-content-center align-items-center color-circle round-40 rounded-circle yen-bluegreen" onclick="getColor(this)"></div>
								<div id="blue" class="d-flex justify-content-center align-items-center color-circle round-40 rounded-circle yen-blue" onclick="getColor(this)"></div>
								<div id="darkblue" class="d-flex justify-content-center align-items-center color-circle round-40 rounded-circle yen-darkblue" onclick="getColor(this)"></div>
								<div id="navy" class="d-flex justify-content-center align-items-center color-circle round-40 rounded-circle yen-navy" onclick="getColor(this)"></div>
								<div id="purple" class="d-flex justify-content-center align-items-center color-circle round-40 rounded-circle yen-purple" onclick="getColor(this)"></div>
							</div>
						</div>
					</div>
				</div>
				<!-- 모달 끝 -->
				<!-- 달력 카테고리 -->
				<div class="input-group align-items-center">
					<i class="fa-regular fa-rectangle-list fs-5 mb-0"></i>
					<div class="col-yen-30">
						<select id="select-cal-type" onchange="schdulTypeChange()" class="form-control form-select" data-placeholder="Choose a Category" tabindex="1">
							<option value="my">내 캘린더</option>
							<option value="dept">부서 일정</option>
							<option value="project">프로젝트</option>
						</select>
					</div>
					<div id="select-cal-project-container" class="col-yen-30" style="display: none;">
						<select id="select-cal-project" class="form-control form-select" data-placeholder="Choose a Category" tabindex="1">
							<c:forEach items="${projectList }" var="project">
								<option value="${project.prjctNo }">${project.prjctNm }</option>
							</c:forEach>
						</select>
					</div>
				</div>
				
				
<script>
// 캘린더 선택에서 프로젝트 선택 시 추가 선택
function schdulTypeChange() {
	if ($("#select-cal-type").val() == "project") {
		$("#select-cal-project-container").show();
	} else {
		$("#select-cal-project-container").hide();
	}
}
</script>


				<!-- 일정 시작 / 끝 -->
				<div id="selectDate" class="input-group align-items-center">
					<i id="schedule-detail-icon-cal-1" class="fa-regular fa-calendar fs-5 mb-0"></i>
					<span class="wrap_date"> 
						<input id="bgnde" type="date" onchange="bgndeChanged()" class="form-control" name="schdulBgnde" value="${now }" min="${now }">
					</span> 
					<span class="wrap_time"> 
						<input class="timepicker form-control"  id="bgntime" type="text">
					</span> 
					<span style="margin-left: 10px; margin-right: 10px;"> - </span>
					<span class="wrap_date"> 
						<input id="endde" type="date" onchange="enddeChanged()" class="form-control" name="schdulEndde" value="${now }">
					</span>
					<span class="wrap_time"> 
						<input class="timepicker form-control" id="endtime">
					</span> 
					<div class="form-check form-check-inline">
						<input id="checkAllday" class="form-check-input" type="checkbox" value="allday">
						<label class="form-check-label" for="inlineCheckbox1">종일</label>
					</div>
				</div>
				
				
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.css">
<script src="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.js"></script>
<script type="text/javascript">

//시작 날짜 변경 시 끝 날짜 선택 영역 변경
function bgndeChanged() {
	console.log("bgndeChanged()");
	// 끝 날짜 최소 선택 => 시작 날짜
	var selectedTime = $("#bgnde").val();
	$("#endde").attr("min", selectedTime);
	
	var bgnDate = getCurrentDate($("#bgnde").val());
	var endDate = getCurrentDate($("#endde").val());
	// 현재 끝 날짜가 시작 날짜 이전이면 => 시작 날짜로 변경
	if(bgnDate>endDate){
		$("#endde").val(selectedTime);
	}
	// 시작 날짜와 끝 날짜가 같으면
	if(bgnDate.getTime() === endDate.getTime()){
		checkTimeSection();
	}
	setAttendeeTimeSection();
}

// 끝 날짜 변경 시 시작 날짜 선택 영역 변경
function enddeChanged() {
	// 시작 날짜 최대 선택 => 끝 날짜
	var selectedTime = $("#endde").val();
	$("#bgnde").attr("max", selectedTime);
	
	var bgnDate = getCurrentDate($("#bgnde").val());
	var endDate = getCurrentDate($("#endde").val());
	// 현재 시작 날짜가 끝 날짜 이후이면 => 끝 날짜로 변경
	if(bgnDate>endDate){
		$("#bgnde").val(selectedTime);
	}
	// 시작 날짜와 끝 날짜가 같으면
	if(bgnDate.getTime() === endDate.getTime()){
		checkTimeSection();
	}
	setAttendeeTimeSection();
}

// 시작 시간과 끝 시간 체크
function checkTimeSection(){
	var bgnTime = $("#bgntime").val();
	var endTime = $("#endtime").val();
	if(bgnTime>endTime){
		$("#bgntime").val("14:00");
		$("#endtime").val("15:00");
	}
}

//일정 시작 시간 변경 시
function bgntimeChanged() {
	console.log("bgntimeChanged");
	
	// 일정 시작 날짜와 끝 날짜가 같으면
	if($("#bgnde").val() == $("#endde").val()){
		
		// 일정 끝나는 시간 최소 시간을 일정 시작 시간 다음 시간으로 변경
		let nextTime = getNextTime($("#bgntime").val());
		if( $('#endtime').timepicker('option', 'minTime') != nextTime ){			
			$('#endtime').timepicker('option', 'minTime', nextTime);
		}
		
		if($("#bgntime").val() > $("#endtime").val()){ // 변경한 시작 시간이 끝 시간보다 크면
			// 끝 시간을 시작 시간 다음 시간으로 변경
			$("#endtime").val(getNextTime($("#bgntime").val()));
		}
		
	}
	
	setAttendeeTimeSection();
	
}

//일정 끝 시간 변경 시
function endtimeChanged() {
	console.log("endtimeChanged");
	
	// 일정 시작 날짜와 끝 날짜가 같으면
	if($("#bgnde").val() == $("#endde").val()){
		console.log('$("#bgnde").val() == $("#endde").val()');
		
		// 일정 시작 시간 최대 시간을 일정 끝 시간으로 변경
		if( $('#bgntime').timepicker('option', 'maxTime') != getPrevTime($("#endtime").val()) ){
			$('#bgntime').timepicker('option', 'maxTime', getPrevTime($("#endtime").val()));
		}
		
		if($("#bgntime").val() > $("#endtime").val()){ // 변경한 끝 시간이 시작 시간보다 크면
			// 시작 시간을 끝 시간 전 시간으로 변경
			$("#bgntime").val(getPrevTime($("#endtime").val()));
		}
		
	}
	
	setAttendeeTimeSection();
	
}

// 시작 날짜와 끝 날짜가 같을 떄 시작 시간 설정 시 끝 시간 시작 이간 이전으로 설정 못하게 함
function setEndTime() {
	if($("#bgnde").val() == $("#endde").val()){
		let nextTime = getNextTime($("#bgntime").val());
		$('#endtime').timepicker('option', 'minTime', nextTime);
		$('#endtime').val(nextTime);
		if($("#bgnde").val() == $("#selected-date").data('value')){
			setAttendeeTime($("#bgntime").val(),$("#endtime").val());
		}
	}else{
		$('#endtime').timepicker('option', 'minTime', '08:00');		
	}
}

// 참석자 일정 부분 선택 시간 설정
function setAttendeeTimeSection(){
	
	console.log("setAttendeeTimeSection()");
	
	var bgnDate = getCurrentDate($("#bgnde").val());
	var endDate = getCurrentDate($("#endde").val());
	var selectedDe = getCurrentDate(document.getElementById("selected-date").dataset.value);
	
	console.log("bgnDate : ", bgnDate);
	console.log("endDate : ", endDate);
	console.log("selectedDate : ", selectedDe);
	
	
	// 현재 표시 날짜가 일정 선택 시간 사이에 있을 때
	if( bgnDate <= selectedDe && selectedDe <= endDate){
		$("#set-time").css("display", "block");
		if(bgnDate.getTime() === selectedDe.getTime()){ // 현재 표시 날짜가 일정 시작 날짜이면
			setAttendeeTimeBox($("#bgntime").val(),"left");
		}else{
			setAttendeeTimeBox("08:00","left");			
		}
		
		if(endDate.getTime() === selectedDe.getTime()){ // 현재 표시 날짜가 일정 끝 날짜이면
			setAttendeeTimeBox($("#endtime").val(),"right");
		}else{
			setAttendeeTimeBox("19:00","right");			
		}
	}else { // 현재 표시 날짜가 일정 선택 시간이 아닐 때 => 파란 박스 안보이게
		$("#set-time").css("display", "none");
	}
	
	// 현재 표시 참석자 일정 반영
	var attEmplElems = document.querySelectorAll('.att_schedule_bd');
	for(let i=0; i<attEmplElems.length; i++){
		console.log(attEmplElems[i].dataset.emplNo);
		addAttendeeSchdul(attEmplElems[i].dataset.emplNo);
	}
	
}

function setAttendeeTimeBox(time, direction) {
	
	if(direction == 'left'){
		var percent = getSetTimeStyle(time) +'%';
		$("#set-time").css(direction, percent);
	} else {
		var percent = 100;
		percent -= getSetTimeStyle(time);
		percent += '%';
		$("#set-time").css(direction, percent);
	}
	
}

function setAttendeeTime(bgnTime, endTime) {
	var left = getSetTimeStyle(bgnTime);
	var right = getSetTimeStyle(endTime);
	$("#set-time").css("left", left+'%');
	$("#set-time").css("right", right+'%');
}

function getSetTimeStyle(time) {
	if(time == '08:00'){
		return 0;
	} else if(time == '08:00'){
		return 0;
	} else if(time == '08:30'){
		return 50;
	} else if(time == '09:00'){
		return 100;
	} else if(time == '09:30'){
		return 150;
	} else if(time == '10:00'){
		return 200;
	} else if(time == '10:30'){
		return 250;
	} else if(time == '11:00'){
		return 300;
	} else if(time == '11:30'){
		return 350;
	} else if(time == '12:00'){
		return 400;
	} else if(time == '12:30'){
		return 450;
	} else if(time == '13:00'){
		return 500;
	} else if(time == '13:30'){
		return 550;
	} else if(time == '14:00'){
		return 600;
	} else if(time == '14:30'){
		return 650;
	} else if(time == '15:00'){
		return 700;
	} else if(time == '15:30'){
		return 750;
	} else if(time == '16:00'){
		return 800;
	} else if(time == '16:30'){
		return 850;
	} else if(time == '17:00'){
		return 900;
	} else if(time == '17:30'){
		return 950;
	} else if(time == '18:00'){
		return 1000;
	} else if(time == '18:30'){
		return 1050;
	} else if(time == '19:00'){
		return 1100;
	}
}

//30분 전의 시간 리턴
function getPrevTime(time) {
	let min = time.substring(3,5);
	let hour = Number(time.substring(0, 2));
	if(time == '08:00'){
		
	}else {
		if(min=="00"){
			min = "30";
			hour -= 1;
		}else{
			min = "00";
		}
	}
	return hour + ":" + min;
}

//30분 후의 시간 리턴
function getNextTime(time) {
	let min = time.substring(3,5);
	let hour = Number(time.substring(0, 2));
	if(time == '19:00'){
		
	}else {
		if(min=="00"){
			min = "30";
		}else{
			min = "00";
			hour += 1;
		}
	}
	return hour + ":" + min;
}

$(document).ready(function(){
	// 시작 시간 타임 피커 설정
	$('#bgntime').timepicker({
	    timeFormat: 'HH:mm',
	    interval: 30,
	    minTime: '08:00',
	    maxTime: '19:00',
	    defaultTime: '08:00',
	    dynamic: false,
	    dropdown: true,
	    scrollbar: false,
	    change: bgntimeChanged});
	
	// 끝 시간 타임 피커 설정
	$('#endtime').timepicker({
	    timeFormat: 'HH:mm',
	    interval: 30,
	    minTime: '08:00',
	    maxTime: '19:00',
	    defaultTime: '08:00',
	    dynamic: false,
	    dropdown: true,
	    scrollbar: false,
	    change: endtimeChanged});
	
	// 종일 체크 박스 선택 시 시간 선택 없애고 일정 확인 안되게
    $("#checkAllday").change(function(){
        if($("#checkAllday").is(":checked")){
        	$(".wrap_time").hide();
        	$(".attendees-unavailable").show();
        	$(".attendees-available").hide();
        }else{
        	$(".wrap_time").show();        	
        	$(".attendees-unavailable").hide();
        	$(".attendees-available").show();
        }
    });
});

</script>


				<!-- 참석자 -->
				<div class="input-group align-items-center ui-components gap-3" style="flex-wrap: nowrap;">
					<i class="fa-regular fa-user fs-5 mb-0"></i> 
					<div id="attendee-box">
						<span class="atendee-elem mb-1 badge rounded-pill text-bg-danger align-items-center"> 
							권예은-개발3팀 
							<iconify-icon icon="carbon:close-filled"></iconify-icon>
						</span>
					</div>
					<button type="button" id="btn-orgtree-att" style="display: none;" class="btn" data-bs-toggle="modal" data-bs-target="#modal-orgtree-att" data-backdrop="false"></button>
					<a href="javascript:openOrgTree()">
						<i class="fa-regular fa-circle-plus"></i>
					</a>
				</div>
				
				
<script type="text/javascript">
// 기존 조직도를 참석자 추가용으로 변경
function openOrgTree() {
	document.getElementById('btn-organtree-modal').click();
	$(".modal-backdrop").remove();
	$(".modal-organixationtree").css({"margin-left":"auto","margin-top":"300px"});
	$(".tree-ad-icon").html("");
	$(".organ-tree-empl").on("click", function() {
		addAttendee($(this));
	});
}

// 참석자 목록에 추가
function addAttendee(emplElem) {
	var id = "attendee-" + emplElem.data('emplNo');
	console.log(id);
	if(document.getElementById(id)){ // 이미 목록에 있으면 메소드 끝
		return false;
	}else{ // 없으면 추가 해
		var dept = (emplElem.data('deptNm') == null || emplElem.data('deptNm') =="") ? emplElem.data('clsfNm') : emplElem.data('deptNm');
		var empl = emplElem.data('emplNm')+"-"+dept;
		var elem = '<span onclick="removeAttendee(this)" class="atendee-elem mb-1 badge rounded-pill text-bg-danger align-items-center" ';
		elem += 'id="' + id +'">';
		elem += empl + '<iconify-icon icon="carbon:close-filled"></iconify-icon></span>';
		document.getElementById("attendee-box").innerHTML += elem;
		addTableOnAttendeeSection(emplElem);
	}
}

// 참석자 목록에서 삭제
function removeAttendee(e){
	e.remove();
}

// 참석자 일정 확인
function addAttendeeSchdul(emplNo) {
	
	var dateToCheck = $("#selected-date").data('value');
	console.log(dateToCheck);
	var request = $.ajax({
		url: "/schedule/getAttendeeSchdul",
		method : "GET",
		data: {
			"emplNo": emplNo,
			"dateToCheck": dateToCheck
		},
		dataType : "json"	
	});
	request.done(function(data) {
		console.log(data);
		for(let i=0; i<data.length; i++){
			var aData = data[i];
			if(aData.alldayYn == "Y"){
				var divs = document.querySelectorAll('.att_${emplNo} td div');
				
			}
			var date = new Date(aData.schdulBgnde);
			console.log(date);
		}
	});
}

</script>


				<!-- 장소 -->
				<div class="input-group align-items-center">
					<i class="fa-light fa-location-dot fs-5 mb-0"></i>
					<div class="col-yen-30">
						<select id="select-place-type" class="form-control form-select" onchange="placeTypeChange()" data-placeholder="Choose a Category" tabindex="1">
							<option value="text">직접 입력</option>
							<option value="meetingroom">회의실 예약</option>
						</select>
					</div>
					<div id="input-place-text-container" class="col-yen-30">
						<input class="form-control" type="text" value="" placeholder="장소를 입력하세요." id="example-text-input">
					</div>
					<div id="select-meeting-room-container" class="col-yen-30" style="display: none;">
						<select id="select-meeting-room" class="form-control form-select" data-placeholder="Choose a Category" tabindex="1">
						</select>
					</div>
				</div>
				<!-- 알림 -->
				<div class="input-group align-items-center">
					<i class="fa-regular fa-bell fs-5 mb-0"></i>
					<div class="col-yen-30">
						<select class="form-control form-select" data-placeholder="Choose a Category" tabindex="1">
							<option value="none">없음</option>
							<option value="10min">10분 전 알림</option>
							<option value="30min">30분 전 알림</option>
							<option value="1hour">1시간 전 알림</option>
							<option value="1day">1일 전 알림</option>
							<option value="2day">2일 전 알림</option>
							<option value="1week">일주일 전 알림</option>
							<option value="custom">직접 입력</option>
						</select>
					</div>
					<div class="col-yen-30" style="display: none;">
						<select class="form-control form-select" data-placeholder="Choose a Category" tabindex="1">
							<option value="before0">당일</option>
							<option value="before1">1일전</option>
							<option value="before2">2일전</option>
							<option value="before3">3일전</option>
							<option value="before4">4일전</option>
							<option value="before5">5일전</option>
							<option value="before6">6일전</option>
							<option value="before7">7일전</option>
						</select>
					</div>
				</div>
				<!-- 내용 -->
				<div class="input-group align-items-center form-text-area">
					<textarea name="schdulCn" class="form-control text-area" cols="10" placeholder="내용을 입력하세요."></textarea>
				</div>
				<div class="button-group">
					<button type="button" class="btn btn-info">등록</button>
				</div>
			</form>
		</div>
	</div>



	<!-- 참석자 일정 -->
	<!-- 종일 -->
	<div class="attendees attendees-unavailable col-yen-35" data-attendees-schedule-wrapper="">
		<div>
			<div data-attendees-notice-el="" class="attendees_notice" style="">
				<div data-attendees-schedule-show-desc="" class="txt">종일 일정인 경우 참석자의 시간별 일정을 조회하실 수 없습니다.</div>
			</div>
		</div>
	</div>
	<!-- 참석자 시간 -->
	<div class="attendees attendees-available col-yen-35">
		<div>
			<div data-attendees-schedule-content="" class="attendees_contents">
				<div data-attendees-schedule-el="" class="attendees_hd">
					<div class="critical">
						<div class="tit">참석자 일정</div>
						<div class="current_date">
							<span data-attendees-selected-date="" id="selected-date" title="선택된 날짜" data-value="2024-04-15" class="date">04월 15일</span>
							<span class="prev-btn btn_ic_prev2" title="이전" data-attendees-route="previous">
								<span class="ic ic_prev2"><i class="fa-solid fa-chevron-left"></i></span>
							</span> 
							<span class="next-btn btn_ic_next2" title="다음" data-attendees-route="next">
								<span class="ic ic_next2"><i class="fa-solid fa-chevron-right"></i></span>
							</span>
						</div>
					</div>
					<div class="optional">
						<ul class="legend">
							<li><span class="set_time"></span> <span class="txt">설정시간</span></li>
							<li><span class="busy"></span> <span class="txt">일정있음</span></li>
						</ul>
					</div>
				</div>

				<div data-attendees-schedule-el="" class="att_schedule">
					<div class="att_schedule_hd">
						<div class="tit"></div>
						<div class="nav">
							<div class="tb_guide">
								<table>
									<tbody>
										<tr>
											<th>
												<div class="txt">08:00</div>
											</th>
											<th>
												<div class="txt">09:00</div>
											</th>
											<th>
												<div class="txt">10:00</div>
											</th>
											<th>
												<div class="txt">11:00</div>
											</th>
											<th>
												<div class="txt">12:00</div>
											</th>
											<th>
												<div class="txt">13:00</div>
											</th>
											<th>
												<div class="txt">14:00</div>
											</th>
											<th>
												<div class="txt">15:00</div>
											</th>
											<th>
												<div class="txt">16:00</div>
											</th>
											<th>
												<div class="txt">17:00</div>
											</th>
											<th>
												<div class="txt">18:00</div>
											</th>
											<th>
												<div class="txt">19:00</div>
											</th>
										</tr>
									</tbody>
								</table>
							</div>
							<div class="tb_info">
								<table>
									<tbody>
										<tr>
											<th class="">
												<div class="txt">8</div>
											</th>
											<th class="">
												<div class="txt">9</div>
											</th>
											<th class="">
												<div class="txt">10</div>
											</th>
											<th class="">
												<div class="txt">11</div>
											</th>
											<th class="">
												<div class="txt">12</div>
											</th>
											<th class="">
												<div class="txt">13</div>
											</th>
											<th class="">
												<div class="txt">14</div>
											</th>
											<th class="">
												<div class="txt">15</div>
											</th>
											<th class="">
												<div class="txt">16</div>
											</th>
											<th class="">
												<div class="txt">17</div>
											</th>
											<th class="">
												<div class="txt">18</div>
											</th>
											<th class="">
												<div data-untime-19="" class="txt">19</div>
											</th>
										</tr>
									</tbody>
								</table>
							</div>
						</div>
					</div>
					<div id="wrap_att_schedule_bd" data-attendees-schedule-user-contents="" class="wrap_att_schedule_bd">
						<!-- 설정/추천시간 -->
						<div data-attendees-selected-time="" class="att_schedul_line" style="height: 32px;">
							<!-- 인원 추가시 32px 증가 -->
							<div class="timeline">
								<div class="tb_guide guide_layer">
									<table>
										<tbody>
											<tr>
												<td class="">
													<!-- 선택 시간 -->
													<div data-set-time="" id="set-time" class="set_time" style="left: 750%; right: -750%; height: 32px; display: none;"></div>
													<!-- 추천 시간 -->
													<div class="recm_time" style="display: none">빈 시간</div>
												</td>
												<td></td>
												<td></td>
												<td></td>
												<td></td>
												<td></td>
												<td></td>
												<td></td>
												<td></td>
												<td></td>
												<td></td>
												<td></td>
											</tr>
										</tbody>
									</table>
								</div>
							</div>
						</div>
						
						<!-- 참석자 일정 -->
						<div id="att_20240004" data-empl-no="20240004" class="att_schedule_bd">
							<div class="tit">
								<p>
									<span data-user-name="권예은" class="txt">권예은</span>
								</p>
							</div>
							<div class="timeline">
								<div class="tb_guide grid_layer">
									<!-- 배경 -->
									<table>
										<tbody>
											<tr data-attendees-tr="">
												<td>
													<div class="txt oclock">08:00</div>
													<div class="txt halfhour">08:30</div>
												</td>
												<td>
													<div class="txt oclock">09:00</div>
													<div class="txt halfhour">09:30</div>
												</td>
												<td>
													<div class="txt oclock">10:00</div>
													<div class="txt halfhour">10:30</div>
												</td>
												<td>
													<div class="txt oclock">11:00</div>
													<div class="txt halfhour">11:30</div>
												</td>
												<td>
													<div class="txt oclock">12:00</div>
													<div class="txt halfhour">12:30</div>
												</td>
												<td>
													<div class="txt oclock">13:00</div>
													<div class="txt halfhour">13:30</div>
												</td>
												<td>
													<div class="txt oclock">14:00</div>
													<div class="txt halfhour">14:30</div>
												</td>
												<td>
													<div class="txt oclock">15:00</div>
													<div class="txt halfhour">15:30</div>
												</td>
												<td>
													<div class="txt oclock">16:00</div>
													<div class="txt halfhour">16:30</div>
												</td>
												<td>
													<div class="txt oclock">17:00</div>
													<div class="txt halfhour">17:30</div>
												</td>
												<td>
													<div class="txt oclock">18:00</div>
													<div class="txt halfhour">18:30</div>
												</td>
												<td>
													<div class="txt oclock">19:00</div>
													<div class="txt halfhour">19:30</div>
												</td>
												</td>
											</tr>
										</tbody>
									</table>
								</div>
							</div>
						</div>
						
						
					</div>
				</div>

				<ul data-attendees-schedule-el="" class="desc">
					<li>- 최대 50명까지의 참석자만 확인할 수 있습니다.</li>
					<li>- 상세일정은 확인할 수 없으며, 참석자의 일정 여부만 확인할 수 있습니다.</li>
					<li>- 오늘 이전의 일정은 확인할 수 없습니다.</li>
				</ul>

			</div>

			<div data-attendees-notice-el="" class="attendees_notice" style="display: none">
				<div data-attendees-schedule-show-desc="" class="txt">
					참석자, 설비의 빈 시간을 확인하고 <br>가장 알맞은 시간을 찾으세요.
				</div>
				<a data-attendees-schedule-show-btn="" class="btn_minor" data-role="button" data-bypass="">
					<span class="txt">참석자 일정 조회</span>
				</a>

			</div>
		</div>
	</div>
</div>
<script>
	var colorCircles = $(".color-circle");

	// 색상 선택 모달 띄우고 화면 어둡게 끄기
	function showColorModal() {
		document.getElementById('btn-color-modal').click();
		$(".modal-backdrop").remove();
	}

	// 모달창 색상 원 선택 시 제목 옆 막대 색 변경
	function getColor(event) {
		for (var i = 0; i < colorCircles.length; i++) {
			colorCircles[i].innerHTML = "";
		}
		console.log(event);
		event.innerHTML = "<i class='fa-solid fa-check fs-7 text-white'></i>";
		$(".side-stick").attr("class", "side-stick");
		$(".side-stick").addClass("yen-" + event.id);
	}

	function placeTypeChange() {
		console.log($("#select-place-type").val());
		if ($("#select-place-type").val() == "text") {
			$("#select-meeting-room-container").hide();
			$("#input-place-text-container").show();
		} else {
			$("#input-place-text-container").hide();
			$("#select-meeting-room-container").show();
		}
	}
	
	
	// 오늘 날짜를 가져오는 함수
	function getTommorrowDate() {
	    var today = new Date();
	    var dd = String(today.getDate() + 1).padStart(2, '0');
	    var mm = String(today.getMonth() + 1).padStart(2, '0'); // January is 0!
	    var yyyy = today.getFullYear();

	    return yyyy + "-" + mm + "-" + dd;
	}

	// 이전 날짜 버튼 이벤트 처리
	document.querySelector('.prev-btn').addEventListener('click', function() {
		
	    // 현재 선택된 날짜에서 하루를 빼서 이전 날짜로 설정
	    var currentDate = getCurrentDate(document.getElementById("selected-date").dataset.value);
	    console.log("!!!!currentDate : ",currentDate);
	    currentDate.setDate(currentDate.getDate() - 1);
	    console.log("!!!!currentDate : ",currentDate);
	    
	    if( document.getElementById("selected-date").dataset.value === getTommorrowDate() ){
	        // data-value가 오늘 날짜와 같으면 btn_ic_prev2를 숨김
	        document.querySelector('.prev-btn').style.display = 'none';
	    }
	    
	    // 변경된 날짜를 선택된 날짜에 반영
	    setSelectedDate(currentDate);
	    
	});

	// 다음 날짜 버튼 이벤트 처리
	document.querySelector('.next-btn').addEventListener('click', function() {
        // btn_ic_prev2를 나타냄
        document.querySelector('.prev-btn').style.display = '';
        
	    // 현재 선택된 날짜에서 하루를 더해서 다음 날짜로 설정
	    var currentDate = getCurrentDate(document.getElementById("selected-date").dataset.value);
	    currentDate.setDate(currentDate.getDate() + 1);
	    
	    // 변경된 날짜를 선택된 날짜에 반영
	    setSelectedDate(currentDate);
	    
	});

	function getCurrentDate(data) {
		var currentDate = new Date(data.substring(0, 4),
                parseInt(data.substring(5, 7)) - 1,
                data.substring(8, 10));
		return currentDate;
	}

    // 변경된 날짜를 선택된 날짜에 반영
	function setSelectedDate(currentDate) {
		var selectedDate = document.getElementById("selected-date");
	    var year = currentDate.getFullYear();
	    var month = ("0" + (currentDate.getMonth() + 1)).slice(-2);
	    var day = ("0" + currentDate.getDate()).slice(-2);
	    var dateString = year + "-" + month + "-" + day;
	    console.log("dateString : ", dateString);
		console.log("2. ",$("#selected-date").data("value"));
	    selectedDate.setAttribute("data-value", dateString);
		console.log("3. ",$("#selected-date").data("value"));
	    selectedDate.textContent = month + "월 " + day + "일";

		setAttendeeTimeSection();
	}
    
    // 참석자 추가시 일정 확인 목록에 추가
    function addTableOnAttendeeSection(empl) {
		var str = '<!-- 참석자 일정 --><div id="att_'+ empl.data('emplNo') + '" data-empl-no="'+ empl.data('emplNo') + '" class="att_schedule_bd"><div class="tit"><p><span data-user-name="';
		str += empl.data('emplNm') + '" class="txt">' + empl.data('emplNm') + '</span></p></div><div class="timeline"><div class="tb_guide grid_layer"><!-- 배경 --><table><tbody><tr data-attendees-tr="">';
		str += '<td><div class="txt oclock o8">08:00</div><div class="txt halfhour h8">08:30</div></td><td><div class="txt oclock o9">09:00</div><div class="txt halfhour h9">09:30</div>';
		str += '</td><td> <div class="txt oclock o10">10:00</div> <div class="txt halfhour h10">10:30</div> </td> <td> <div class="txt oclock o11">11:00</div> <div class="txt halfhour h11">11:30</div>';
		str += '</td> <td> <div class="txt oclock o12">12:00</div> <div class="txt halfhour h12">12:30</div> </td> <td> <div class="txt oclock o13">13:00</div> <div class="txt halfhour h13">13:30</div>';
		str += '</td> <td> <div class="txt oclock o14">14:00</div> <div class="txt halfhour h14">14:30</div> </td> <td> <div class="txt oclock o15">15:00</div> <div class="txt halfhour h15">15:30</div>';
		str += '</td> <td> <div class="txt oclock o16">16:00</div> <div class="txt halfhour h16">16:30</div> </td> <td> <div class="txt oclock o17">17:00</div> <div class="txt halfhour h17">17:30</div>';
		str += '</td> <td> <div class="txt oclock o18">18:00</div> <div class="txt halfhour h18">18:30</div> </td> <td> <div class="txt oclock o19">19:00</div> <div class="txt halfhour h19">19:30</div>';
		str += '</td> </td> </tr> </tbody> </table> </div> </div> </div>';
		document.getElementById("wrap_att_schedule_bd").innerHTML += str;
		var currentHeight = $(".att_schedul_line").css("height");
		var newHeight = parseInt(currentHeight) + 32 + 'px';
		$(".att_schedul_line").css("height",newHeight);
		$("#set-time").css("height",newHeight);
		setAttendeeTimeSection();
	}


</script>